extends base.pug

block content
    // 포스트 내용 및 메타데이터 출력
    div
        != post.content
        small 작성자: #{post.writer}
        small 작성일: #{formattedPostDate}
        br
        small 조회수: #{post.meta.views}
        br
        small(id="like-count") 좋아요: #{post.meta.like}
        br
        small 댓글 개수: #{comments.length || 0}
        br        
        button(onclick="likePost()") 좋아요

    a(href=`/post/${post._id}/edit`) Edit Post &rarr;
    br
    a(href=`/post/${post._id}/delete`) Delete Post &rarr;

    // 댓글 섹션
    h2 댓글
    ul#comments
        each comment in comments
            li
                strong= comment.author
                p!= comment.content.replace(/\n/g, '<br>')
                small 작성일: #{comment.formattedCreatedAt}
                
                // 댓글 수정 폼
                form(action=`/post/${post._id}/comment/${comment._id}/edit`, method="post", id=`edit-form-${comment._id}`, class="edit-form", style="display:none;")
                    textarea(name="content", required)= comment.content
                    button(type="submit") Edit Comment

                // 댓글 수정 버튼
                button(type="button", onclick=`toggleEditForm('${comment._id}')`) Edit Comment

                // 댓글 삭제 폼
                form(action=`/post/${post._id}/comment/${comment._id}/delete`, method="post")
                    button(type="submit") Delete Comment

    // 댓글 추가 폼
    form(action=`/post/${post._id}/comment`, method="post")
        textarea(name="content", placeholder="Your Comment", required)
        button(type="submit") Add Comment

block scripts
    script.
        const postId = '#{post._id}';

        function likePost() {
            fetch(`/post/${postId}/like`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                credentials: 'same-origin'
            }).then(response => {
                if (response.redirected) {
                    // 서버에서 로그인 페이지로 리디렉션된 경우
                    window.location.href = response.url;
                } else if (response.ok) {
                    return response.json();
                } else {
                    console.error('Failed to increase likes.');
                }
            }).then(data => {
                if (data) {
                    // 좋아요 수 업데이트
                    const likeCountElement = document.querySelector('#like-count');
                    if (likeCountElement) {
                        likeCountElement.textContent = `좋아요: ${data.likeCount}`;
                    }
                }
            }).catch(error => console.error('Error:', error));
        }

        function toggleEditForm(commentId) {
            const form = document.getElementById(`edit-form-${commentId}`);
            if (form) {
                form.style.display = (form.style.display === "none") ? "block" : "none";
            }
        }
